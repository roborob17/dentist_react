{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gebruiker\\\\Documents\\\\GitHub\\\\WINCacademy\\\\dentist_react\\\\src\\\\components\\\\App.js\";\nimport React from \"react\";\nimport \"../styles/App.css\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Home from \"./Home\";\nimport Calendar from \"./Calendar\";\nimport Day from \"./Day\";\nimport data from \"../database.js\";\nimport generateRandomAppointments from \"../functions/generateRandomAppointments.js\";\nconst randomAppointments = generateRandomAppointments(150);\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      patients: data.patients,\n      dentists: data.dentists,\n      assistants: data.assistants,\n      appointments: randomAppointments\n    };\n    this.makeDentistSick = this.makeDentistSick.bind(this);\n    this.makePatientSick = this.makePatientSick.bind(this);\n    this.addDentist = this.addDentist.bind(this);\n    this.addAppointment = this.addAppointment.bind(this);\n    this.removeAppointment = this.removeAppointment.bind(this);\n    this.editAppointment = this.editAppointment.bind(this);\n    this.newPatient = this.newPatient.bind(this);\n  } //function to add new patient used in NewPatient\n\n\n  newPatient(patient) {\n    const patients = this.state.patients;\n    patients.push(patient);\n    this.setState({\n      patients\n    });\n    alert(`Patient \"${patient.firstname} ${patient.surname}\" added`);\n  } //function to make dentist sick, used in NewIllness\n\n\n  makeDentistSick(dentists) {\n    alert(\"Dentist is marked ill, check the calendar for planning.\");\n    this.setState({\n      dentists\n    });\n  } //function to make patient sick, used in forms in NewIllness\n\n\n  makePatientSick(appointments) {\n    alert(\"Patient marked ill. Appointments removed.\");\n    this.setState({\n      appointments\n    });\n  } //function to add dentist, used in newEmployee\n\n\n  addDentist(event) {\n    event.preventDefault();\n    const type = event.target.type.value;\n    const checkboxes = Array.from(document.getElementsByClassName('skill-checkbox'));\n    const skills = checkboxes.map(checkbox => {\n      if (checkbox.checked) {\n        return checkbox.value;\n      } else {\n        return null;\n      }\n    }); //compile the person\n\n    const newPerson = {\n      id: this.state[event.target.type.value].slice(-1)[0].id + 1,\n      firstname: event.target.firstname.value,\n      surname: event.target.surname.value,\n      email: `${event.target.firstname.value}.${event.target.surname.value}@tandartspraktijkbvt.nl`,\n      skills: skills\n    };\n    const employees = this.state[event.target.type.value];\n    employees.push(newPerson); //push the person to the corresponding array if the type is dentist\n\n    if (type === \"dentists\") {\n      this.setState({\n        dentists: employees\n      });\n    } //or if the type is assistant\n    else {\n      this.setState({\n        assistants: employees\n      });\n    }\n\n    event.target.reset();\n    alert(\"Person added. Thank you.\");\n  } //function to add an appoint, used in NewAppointment\n\n\n  addAppointment(newAppointment) {\n    const appointments = this.state.appointments;\n    appointments.push(newAppointment);\n    this.setState({\n      appointments\n    });\n    alert('Appointment added, thank you.');\n  } //function to remove an appointment, used in calendar\n\n\n  removeAppointment(appointment) {\n    const answer = window.confirm(\"Do you want to remove this appointment?\");\n\n    if (answer) {\n      const appointments = this.state.appointments.filter(app => {\n        return app.id !== appointment;\n      });\n      this.setState({\n        appointments\n      });\n    }\n  } //function to edit an appointment, used in calendar\n\n\n  editAppointment(appId) {\n    //ask user for a day, and store available times in \"times\"\n    const selectedDay = parseInt(prompt(\"Enter a new day (1 - 28)\"));\n    const selectedApp = this.state.appointments.find(app => app.id === appId);\n    const appsOnDay = this.state.appointments.filter(app => app.day === selectedDay);\n    let times = Array.from({\n      length: 11\n    }, (v, k) => k + 8);\n    let blockedTimes = [];\n    appsOnDay.forEach(app => {\n      if (app.dentist.id === selectedApp.dentist.id || app.assistant.id === selectedApp.assistant.id) {\n        times = times.filter(time => time !== app.time);\n      }\n    }); //ask user for a time, and send it to appointments\n\n    const selectedTime = parseInt(prompt(`Pick an available time (${times})`));\n\n    if (times.includes(selectedTime)) {\n      selectedApp.time = selectedTime;\n      selectedApp.day = selectedDay;\n      const appointments = this.state.appointments.filter(app => app.id !== appId);\n      appointments.push(selectedApp);\n      this.setState({\n        appointments\n      });\n    } else {\n      alert('Invalid time. Move aborted. Please try again.');\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"nav\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 21\n      }\n    }, \"Home\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/calendar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 21\n      }\n    }, \"Calendar view\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/day\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 21\n      }\n    }, \"Day view\")))), /*#__PURE__*/React.createElement(\"main\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/calendar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Calendar, {\n      appointments: this.state.appointments,\n      removeAppointment: this.removeAppointment,\n      editAppointment: this.editAppointment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Route, {\n      path: \"/day\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Day, {\n      appointments: this.state.appointments.filter(app => app.day === 1),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Route, {\n      path: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Home, {\n      data: this.state,\n      makeDentistSick: this.makeDentistSick,\n      makePatientSick: this.makePatientSick,\n      addDentist: this.addDentist,\n      addAppointment: this.addAppointment,\n      newPatient: this.newPatient,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 21\n      }\n    }))))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"names":["React","BrowserRouter","Router","Switch","Route","Link","Home","Calendar","Day","data","generateRandomAppointments","randomAppointments","App","Component","constructor","state","patients","dentists","assistants","appointments","makeDentistSick","bind","makePatientSick","addDentist","addAppointment","removeAppointment","editAppointment","newPatient","patient","push","setState","alert","firstname","surname","event","preventDefault","type","target","value","checkboxes","Array","from","document","getElementsByClassName","skills","map","checkbox","checked","newPerson","id","slice","email","employees","reset","newAppointment","appointment","answer","window","confirm","filter","app","appId","selectedDay","parseInt","prompt","selectedApp","find","appsOnDay","day","times","length","v","k","blockedTimes","forEach","dentist","assistant","time","selectedTime","includes","render"],"sources":["C:/Users/Gebruiker/Documents/GitHub/WINCacademy/dentist_react/src/components/App.js"],"sourcesContent":["import React from \"react\";\r\nimport \"../styles/App.css\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport Home from \"./Home\";\r\nimport Calendar from \"./Calendar\";\r\nimport Day from \"./Day\";\r\nimport data from \"../database.js\";\r\nimport generateRandomAppointments from \"../functions/generateRandomAppointments.js\";\r\n\r\nconst randomAppointments = generateRandomAppointments(150)\r\n\r\nclass App extends React.Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            patients: data.patients,\r\n            dentists: data.dentists,\r\n            assistants: data.assistants,\r\n            appointments: randomAppointments\r\n        }\r\n    this.makeDentistSick = this.makeDentistSick.bind(this);\r\n    this.makePatientSick = this.makePatientSick.bind(this);\r\n    this.addDentist = this.addDentist.bind(this);\r\n    this.addAppointment = this.addAppointment.bind(this);\r\n    this.removeAppointment = this.removeAppointment.bind(this);\r\n    this.editAppointment = this.editAppointment.bind(this);\r\n    this.newPatient = this.newPatient.bind(this);\r\n    }\r\n\r\n    //function to add new patient used in NewPatient\r\n    newPatient (patient){\r\n        const patients = this.state.patients\r\n        patients.push(patient)\r\n        this.setState ({\r\n            patients\r\n        })\r\n        alert(`Patient \"${patient.firstname} ${patient.surname}\" added`)\r\n    }\r\n\r\n    //function to make dentist sick, used in NewIllness\r\n    makeDentistSick(dentists){\r\n        alert(\"Dentist is marked ill, check the calendar for planning.\")\r\n        this.setState ({\r\n            dentists\r\n        })\r\n    }\r\n\r\n    //function to make patient sick, used in forms in NewIllness\r\n    makePatientSick(appointments){\r\n        alert(\"Patient marked ill. Appointments removed.\")\r\n        this.setState ({\r\n            appointments\r\n        })\r\n    }\r\n\r\n    //function to add dentist, used in newEmployee\r\n    addDentist (event) {\r\n        event.preventDefault();\r\n        const type = event.target.type.value;\r\n        const checkboxes = Array.from(document.getElementsByClassName('skill-checkbox'));\r\n        const skills = checkboxes.map(checkbox => {if (checkbox.checked){return checkbox.value} else {return null}\r\n        })\r\n\r\n        //compile the person\r\n        const newPerson = {\r\n            id: this.state[event.target.type.value].slice(-1)[0].id +1,\r\n            firstname: event.target.firstname.value,\r\n            surname: event.target.surname.value,\r\n            email: `${event.target.firstname.value}.${event.target.surname.value}@tandartspraktijkbvt.nl`,\r\n            skills: skills\r\n        }\r\n        const employees = this.state[event.target.type.value]\r\n        employees.push(newPerson)\r\n\r\n        //push the person to the corresponding array if the type is dentist\r\n        if (type === \"dentists\") {\r\n            this.setState ({\r\n                dentists: employees\r\n            })\r\n        }\r\n\r\n        //or if the type is assistant\r\n        else {\r\n            this.setState ({\r\n                assistants: employees\r\n            })\r\n        }\r\n        event.target.reset();\r\n        alert(\"Person added. Thank you.\")\r\n        }\r\n        \r\n        //function to add an appoint, used in NewAppointment\r\n        addAppointment(newAppointment){\r\n            const appointments = this.state.appointments\r\n            appointments.push(newAppointment)\r\n            this.setState({\r\n                appointments\r\n            })\r\n            alert('Appointment added, thank you.')\r\n        }\r\n\r\n        //function to remove an appointment, used in calendar\r\n        removeAppointment(appointment){   \r\n        const answer = window.confirm(\"Do you want to remove this appointment?\");\r\n            if (answer) {\r\n                const appointments = this.state.appointments.filter(app => {\r\n                    return app.id !== appointment\r\n                })\r\n                this.setState ({\r\n                    appointments\r\n                })\r\n            }\r\n        }\r\n\r\n        //function to edit an appointment, used in calendar\r\n        editAppointment (appId) {\r\n            //ask user for a day, and store available times in \"times\"\r\n            const selectedDay = parseInt(prompt(\"Enter a new day (1 - 28)\"));\r\n            const selectedApp = this.state.appointments.find(app => app.id === appId);\r\n            const appsOnDay = this.state.appointments\r\n                .filter(app => app.day === selectedDay)\r\n            let times = Array.from({length:11},(v,k)=>k+8)\r\n            let blockedTimes = []\r\n            appsOnDay.forEach(app => {\r\n                if(app.dentist.id === selectedApp.dentist.id || app.assistant.id === selectedApp.assistant.id){\r\n                    times = times.filter(time => time !== app.time)\r\n                }\r\n            })\r\n\r\n            //ask user for a time, and send it to appointments\r\n            const selectedTime = parseInt(prompt(`Pick an available time (${times})`))\r\n            if(times.includes(selectedTime)){\r\n                selectedApp.time = selectedTime;\r\n                selectedApp.day = selectedDay;\r\n                const appointments = this.state.appointments.filter(app => app.id !== appId)\r\n                appointments.push(selectedApp);\r\n                this.setState({\r\n                    appointments\r\n                })\r\n            }\r\n            else{\r\n                alert('Invalid time. Move aborted. Please try again.')\r\n            }\r\n        }\r\n    render() {\r\n        return(\r\n        <Router>\r\n            <div>\r\n            <nav>\r\n                <ul>\r\n                <li>\r\n                    <Link to=\"/\">Home</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/calendar\">Calendar view</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/day\">Day view</Link>\r\n                </li>\r\n                </ul>\r\n            </nav>\r\n            <main>\r\n                <Switch>\r\n                <Route path=\"/calendar\">\r\n                    <Calendar \r\n                    appointments={this.state.appointments} \r\n                    removeAppointment={this.removeAppointment}\r\n                    editAppointment={this.editAppointment}\r\n                    />\r\n                </Route>\r\n                <Route path=\"/day\">\r\n                    <Day appointments={this.state.appointments.filter(app => app.day === 1)} />\r\n                </Route>\r\n                <Route path=\"/\">\r\n                    <Home \r\n                    data={this.state} \r\n                    makeDentistSick={this.makeDentistSick} \r\n                    makePatientSick={this.makePatientSick}\r\n                    addDentist={this.addDentist}\r\n                    addAppointment={this.addAppointment}\r\n                    newPatient={this.newPatient}\r\n                    />\r\n                </Route>\r\n                </Switch>\r\n            </main>\r\n            </div>\r\n        </Router>\r\n        );\r\n    }\r\n}\r\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module"}