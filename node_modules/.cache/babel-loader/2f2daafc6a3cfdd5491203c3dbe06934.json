{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gebruiker\\\\Documents\\\\GitHub\\\\WINCacademy\\\\dentist_react\\\\src\\\\components\\\\forms\\\\NewIllness.js\";\nimport React from \"react\";\nimport NewIllnessOption from './NewIllnessOption';\n\nclass NewIllness extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      const selected = this.props.data[event.target.value];\n      this.setState({\n        selected\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault(); //get the type and person id from the form\n\n      const type = event.target.type.value;\n      const id = parseInt(event.target.id.value); //for dentists, just change the isIll boolean and pass back to App\n\n      if (type === \"dentists\") {\n        const newList = this.state.selected;\n        newList[id].isIll = true;\n        this.props.makeDentistSick(newList);\n      } //for patients, get the array of appointments and\n      else {\n        const appointments = this.state.appointments.filter(app => {\n          return app.patient.id !== id;\n        });\n        this.props.makePatientSick(appointments);\n      }\n\n      event.target.reset();\n    };\n\n    this.state = {\n      selector: \"Please select a type of person\",\n      selected: [],\n      appointments: props.data.appointments\n    };\n    this.handleChange = this.handleChange.bind(this);\n  } //updating changes made in the form\n\n\n  render() {\n    const getOptions = this.state.selected.map(person => {\n      return /*#__PURE__*/React.createElement(NewIllnessOption, Object.assign({}, person, {\n        key: person.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 28\n        }\n      }));\n    });\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }, \"Mark for illness\"), /*#__PURE__*/React.createElement(\"select\", {\n      name: \"type\",\n      onChange: this.handleChange,\n      defaultValue: \"\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }\n    }, this.state.selector), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"patients\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }\n    }, \"Patient\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"dentists\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }\n    }, \"Dentist\")), /*#__PURE__*/React.createElement(\"select\", {\n      name: \"id\",\n      defaultValue: \"\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }\n    }, \"Select a Person\"), getOptions), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"submit\",\n      type: \"submit\",\n      value: \"Mark as ill\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default NewIllness;","map":{"version":3,"names":["React","NewIllnessOption","NewIllness","Component","constructor","props","handleChange","event","selected","data","target","value","setState","handleSubmit","preventDefault","type","id","parseInt","newList","state","isIll","makeDentistSick","appointments","filter","app","patient","makePatientSick","reset","selector","bind","render","getOptions","map","person"],"sources":["C:/Users/Gebruiker/Documents/GitHub/WINCacademy/dentist_react/src/components/forms/NewIllness.js"],"sourcesContent":["import React from \"react\";\r\nimport NewIllnessOption from './NewIllnessOption'\r\n\r\nclass NewIllness extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selector: \"Please select a type of person\",\r\n            selected: [],\r\n            appointments: props.data.appointments\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    //updating changes made in the form\r\n    handleChange = (event) => { \r\n        const selected = this.props.data[event.target.value]\r\n        this.setState ({\r\n            selected\r\n        })\r\n    }\r\n\r\n    //Handling submit event to mark as ill\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        //get the type and person id from the form\r\n        const type = event.target.type.value\r\n        const id = parseInt(event.target.id.value)\r\n\r\n        //for dentists, just change the isIll boolean and pass back to App\r\n        if (type === \"dentists\") {\r\n            const newList = this.state.selected;\r\n            newList[id].isIll = true;\r\n            this.props.makeDentistSick(newList);\r\n        }\r\n\r\n        //for patients, get the array of appointments and\r\n        else {   \r\n            const appointments = this.state.appointments.filter(app => {\r\n                return app.patient.id !== id\r\n            })\r\n            this.props.makePatientSick(appointments)\r\n        }\r\n        event.target.reset();\r\n    }\r\n\r\n    render(){\r\n        const getOptions = \r\n                this.state.selected.map(person => {\r\n                    return <NewIllnessOption {...person} key={person.id}/>\r\n                    \r\n            })\r\n        return (\r\n            <form onSubmit={this.handleSubmit}>\r\n                <h1>Mark for illness</h1>\r\n                <select name=\"type\" onChange={this.handleChange} defaultValue=\"\" required>\r\n                    <option value=\"\" disabled>{this.state.selector}</option>\r\n                    <option value=\"patients\">Patient</option>\r\n                    <option value=\"dentists\">Dentist</option>\r\n                </select>\r\n                <select name=\"id\" defaultValue=\"\" required >\r\n                    <option value=\"\" disabled>Select a Person</option>\r\n                    {getOptions}\r\n                </select>\r\n                <input className=\"submit\" type=\"submit\" value=\"Mark as ill\"/>\r\n            </form>\r\n        )\r\n    }\r\n}\r\nexport default NewIllness"],"mappings":"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"},"metadata":{},"sourceType":"module"}