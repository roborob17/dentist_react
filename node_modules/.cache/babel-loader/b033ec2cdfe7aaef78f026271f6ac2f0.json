{"ast":null,"code":"import data from\"../database.js\";//getting a random time\nvar getRandomTime=function getRandomTime(){var hour;while(true){hour=Math.floor(Math.random()*24);if(hour>7&&hour<19){return hour;}}};//getting a random day\nvar getRandomDay=function getRandomDay(){return Math.floor(Math.random()*28)+1;};//picking a random patient from the list\nvar getRandomPatient=function getRandomPatient(){var person=data.patients[Math.floor(Math.random()*data.patients.length)];return person;};var getRandomDentist=function getRandomDentist(){var person=data.dentists[Math.floor(Math.random()*data.dentists.length)];return person;};var getRandomAssistant=function getRandomAssistant(){var person=data.assistants[Math.floor(Math.random()*data.assistants.length)];return person;};var getRandomType=function getRandomType(){var types=[\"Filling\",\"Place Crown\",\"Pull\",\"Surgery\"];var type=types[Math.floor(Math.random()*4)];return type;};//generate x amount of appointments\nvar generateRandomAppointments=function generateRandomAppointments(amount){var appointments=[];var id=0;for(var i=amount;i>0;--i){id++;var appointment={id:id,time:getRandomTime(),day:getRandomDay(),patient:getRandomPatient(),dentist:getRandomDentist(),assistant:getRandomAssistant(),type:getRandomType()};appointments.push(appointment);}return appointments;};export default generateRandomAppointments;","map":{"version":3,"names":["data","getRandomTime","hour","Math","floor","random","getRandomDay","getRandomPatient","person","patients","length","getRandomDentist","dentists","getRandomAssistant","assistants","getRandomType","types","type","generateRandomAppointments","amount","appointments","id","i","appointment","time","day","patient","dentist","assistant","push"],"sources":["C:/Users/Gebruiker/Documents/GitHub/WINCacademy/dentist_react/src/functions/generateRandomAppointments.js"],"sourcesContent":["import data from \"../database.js\";\r\n\r\n//getting a random time\r\nconst getRandomTime = () => {\r\n    let hour;\r\n    while (true) {\r\n        hour = Math.floor(Math.random() * 24);\r\n        if (hour > 7 && hour < 19) {\r\n            return hour;\r\n    }\r\n    }\r\n};\r\n\r\n//getting a random day\r\nconst getRandomDay = () => Math.floor(Math.random() * 28) + 1;\r\n\r\n//picking a random patient from the list\r\nconst getRandomPatient = () => {\r\n    const person = data.patients[Math.floor(Math.random() * data.patients.length)]\r\n    return person\r\n}\r\n\r\nconst getRandomDentist = () => {\r\n    const person = data.dentists[Math.floor(Math.random() * data.dentists.length)]\r\n    return person\r\n}\r\n\r\nconst getRandomAssistant = () => {\r\n    const person = data.assistants[Math.floor(Math.random() * data.assistants.length)]\r\n    return person\r\n}\r\n\r\nconst getRandomType = () => {\r\n    const types = [\"Filling\", \"Place Crown\", \"Pull\", \"Surgery\"]\r\n    const type = types[Math.floor(Math.random() * 4)]\r\n    return type\r\n\r\n}\r\n\r\n//generate x amount of appointments\r\nconst generateRandomAppointments = amount => {\r\n    const appointments = [];\r\n    let id = 0\r\n    for (let i = amount; i > 0; --i){\r\n        id++\r\n        const appointment = {\r\n            id: id,\r\n            time: getRandomTime(),\r\n            day: getRandomDay(),\r\n            patient: getRandomPatient(),\r\n            dentist: getRandomDentist(),\r\n            assistant: getRandomAssistant(),\r\n            type: getRandomType ()\r\n        }\r\n        appointments.push(appointment)\r\n    }\r\n    return appointments\r\n}\r\nexport default generateRandomAppointments"],"mappings":"AAAA,MAAOA,KAAP,KAAiB,gBAAjB,CAEA;AACA,GAAMC,cAAa,CAAG,QAAhBA,cAAgB,EAAM,CACxB,GAAIC,KAAJ,CACA,MAAO,IAAP,CAAa,CACTA,IAAI,CAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,GAAgB,EAA3B,CAAP,CACA,GAAIH,IAAI,CAAG,CAAP,EAAYA,IAAI,CAAG,EAAvB,CAA2B,CACvB,MAAOA,KAAP,CACP,CACA,CACJ,CARD,CAUA;AACA,GAAMI,aAAY,CAAG,QAAfA,aAAe,SAAMH,KAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,GAAgB,EAA3B,EAAiC,CAAvC,EAArB,CAEA;AACA,GAAME,iBAAgB,CAAG,QAAnBA,iBAAmB,EAAM,CAC3B,GAAMC,OAAM,CAAGR,IAAI,CAACS,QAAL,CAAcN,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,GAAgBL,IAAI,CAACS,QAAL,CAAcC,MAAzC,CAAd,CAAf,CACA,MAAOF,OAAP,CACH,CAHD,CAKA,GAAMG,iBAAgB,CAAG,QAAnBA,iBAAmB,EAAM,CAC3B,GAAMH,OAAM,CAAGR,IAAI,CAACY,QAAL,CAAcT,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,GAAgBL,IAAI,CAACY,QAAL,CAAcF,MAAzC,CAAd,CAAf,CACA,MAAOF,OAAP,CACH,CAHD,CAKA,GAAMK,mBAAkB,CAAG,QAArBA,mBAAqB,EAAM,CAC7B,GAAML,OAAM,CAAGR,IAAI,CAACc,UAAL,CAAgBX,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,GAAgBL,IAAI,CAACc,UAAL,CAAgBJ,MAA3C,CAAhB,CAAf,CACA,MAAOF,OAAP,CACH,CAHD,CAKA,GAAMO,cAAa,CAAG,QAAhBA,cAAgB,EAAM,CACxB,GAAMC,MAAK,CAAG,CAAC,SAAD,CAAY,aAAZ,CAA2B,MAA3B,CAAmC,SAAnC,CAAd,CACA,GAAMC,KAAI,CAAGD,KAAK,CAACb,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,GAAgB,CAA3B,CAAD,CAAlB,CACA,MAAOY,KAAP,CAEH,CALD,CAOA;AACA,GAAMC,2BAA0B,CAAG,QAA7BA,2BAA6B,CAAAC,MAAM,CAAI,CACzC,GAAMC,aAAY,CAAG,EAArB,CACA,GAAIC,GAAE,CAAG,CAAT,CACA,IAAK,GAAIC,EAAC,CAAGH,MAAb,CAAqBG,CAAC,CAAG,CAAzB,CAA4B,EAAEA,CAA9B,CAAgC,CAC5BD,EAAE,GACF,GAAME,YAAW,CAAG,CAChBF,EAAE,CAAEA,EADY,CAEhBG,IAAI,CAAEvB,aAAa,EAFH,CAGhBwB,GAAG,CAAEnB,YAAY,EAHD,CAIhBoB,OAAO,CAAEnB,gBAAgB,EAJT,CAKhBoB,OAAO,CAAEhB,gBAAgB,EALT,CAMhBiB,SAAS,CAAEf,kBAAkB,EANb,CAOhBI,IAAI,CAAEF,aAAa,EAPH,CAApB,CASAK,YAAY,CAACS,IAAb,CAAkBN,WAAlB,EACH,CACD,MAAOH,aAAP,CACH,CAjBD,CAkBA,cAAeF,2BAAf"},"metadata":{},"sourceType":"module"}