[{"C:\\Users\\Gebruiker\\Documents\\GitHub\\WINCacademy\\dentist_react\\src\\index.js":"1","C:\\Users\\Gebruiker\\Documents\\GitHub\\WINCacademy\\dentist_react\\src\\utils.js":"2","C:\\Users\\Gebruiker\\Documents\\GitHub\\WINCacademy\\dentist_react\\src\\components\\App.js":"3","C:\\Users\\Gebruiker\\Documents\\GitHub\\WINCacademy\\dentist_react\\src\\database.js":"4","C:\\Users\\Gebruiker\\Documents\\GitHub\\WINCacademy\\dentist_react\\src\\functions\\generateRandomAppointments.js":"5","C:\\Users\\Gebruiker\\Documents\\GitHub\\WINCacademy\\dentist_react\\src\\components\\Home.js":"6","C:\\Users\\Gebruiker\\Documents\\GitHub\\WINCacademy\\dentist_react\\src\\components\\Calendar.js":"7","C:\\Users\\Gebruiker\\Documents\\GitHub\\WINCacademy\\dentist_react\\src\\components\\Day.js":"8","C:\\Users\\Gebruiker\\Documents\\GitHub\\WINCacademy\\dentist_react\\src\\components\\DayInMonth.js":"9","C:\\Users\\Gebruiker\\Documents\\GitHub\\WINCacademy\\dentist_react\\src\\components\\AppointmentInDay.js":"10","C:\\Users\\Gebruiker\\Documents\\GitHub\\WINCacademy\\dentist_react\\src\\components\\forms\\NewIllness.js":"11","C:\\Users\\Gebruiker\\Documents\\GitHub\\WINCacademy\\dentist_react\\src\\components\\forms\\NewPatient.js":"12","C:\\Users\\Gebruiker\\Documents\\GitHub\\WINCacademy\\dentist_react\\src\\components\\forms\\NewEmployee.js":"13","C:\\Users\\Gebruiker\\Documents\\GitHub\\WINCacademy\\dentist_react\\src\\components\\forms\\NewAppointment.js":"14","C:\\Users\\Gebruiker\\Documents\\GitHub\\WINCacademy\\dentist_react\\src\\components\\AppointmentInMonth.js":"15","C:\\Users\\Gebruiker\\Documents\\GitHub\\WINCacademy\\dentist_react\\src\\components\\forms\\NewAppointmentPerson.js":"16","C:\\Users\\Gebruiker\\Documents\\GitHub\\WINCacademy\\dentist_react\\src\\components\\forms\\NewIllnessOption.js":"17","C:\\Users\\Gebruiker\\Documents\\GitHub\\WINCacademy\\dentist_react\\src\\components\\forms\\NewAppointmentTime.js":"18"},{"size":248,"mtime":1652975693286,"results":"19","hashOfConfig":"20"},{"size":25147,"mtime":1652972189145,"results":"21","hashOfConfig":"20"},{"size":7008,"mtime":1652975233271,"results":"22","hashOfConfig":"20"},{"size":8033,"mtime":1652974630827,"results":"23","hashOfConfig":"20"},{"size":1599,"mtime":1652975297897,"results":"24","hashOfConfig":"20"},{"size":559,"mtime":1652975142538,"results":"25","hashOfConfig":"20"},{"size":1291,"mtime":1652975191042,"results":"26","hashOfConfig":"20"},{"size":671,"mtime":1652975178541,"results":"27","hashOfConfig":"20"},{"size":735,"mtime":1652975158943,"results":"28","hashOfConfig":"20"},{"size":786,"mtime":1652975219682,"results":"29","hashOfConfig":"20"},{"size":2451,"mtime":1652974984114,"results":"30","hashOfConfig":"20"},{"size":1262,"mtime":1652974902367,"results":"31","hashOfConfig":"20"},{"size":1617,"mtime":1652974995111,"results":"32","hashOfConfig":"20"},{"size":9774,"mtime":1653035572821,"results":"33","hashOfConfig":"20"},{"size":1266,"mtime":1652975204506,"results":"34","hashOfConfig":"20"},{"size":205,"mtime":1652975016171,"results":"35","hashOfConfig":"20"},{"size":197,"mtime":1652974918329,"results":"36","hashOfConfig":"20"},{"size":183,"mtime":1652975004703,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"hyj667",{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Gebruiker\\Documents\\GitHub\\WINCacademy\\dentist_react\\src\\index.js",[],[],"C:\\Users\\Gebruiker\\Documents\\GitHub\\WINCacademy\\dentist_react\\src\\utils.js",[],[],"C:\\Users\\Gebruiker\\Documents\\GitHub\\WINCacademy\\dentist_react\\src\\components\\App.js",["97"],[],"import React from \"react\";\r\nimport \"../styles/App.css\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport Home from \"./Home\";\r\nimport Calendar from \"./Calendar\";\r\nimport Day from \"./Day\";\r\nimport data from \"../database.js\";\r\nimport generateRandomAppointments from \"../functions/generateRandomAppointments.js\";\r\n\r\nconst randomAppointments = generateRandomAppointments(150)\r\n\r\nclass App extends React.Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            patients: data.patients,\r\n            dentists: data.dentists,\r\n            assistants: data.assistants,\r\n            appointments: randomAppointments\r\n        }\r\n    this.makeDentistSick = this.makeDentistSick.bind(this);\r\n    this.makePatientSick = this.makePatientSick.bind(this);\r\n    this.addDentist = this.addDentist.bind(this);\r\n    this.addAppointment = this.addAppointment.bind(this);\r\n    this.removeAppointment = this.removeAppointment.bind(this);\r\n    this.editAppointment = this.editAppointment.bind(this);\r\n    this.newPatient = this.newPatient.bind(this);\r\n    }\r\n\r\n    //function to add new patient used in NewPatient\r\n    newPatient (patient){\r\n        const patients = this.state.patients\r\n        patients.push(patient)\r\n        this.setState ({\r\n            patients\r\n        })\r\n        alert(`Patient \"${patient.firstname} ${patient.surname}\" added`)\r\n    }\r\n\r\n    //function to make dentist sick, used in NewIllness\r\n    makeDentistSick(dentists){\r\n        alert(\"Dentist is marked ill, check the calendar for planning.\")\r\n        this.setState ({\r\n            dentists\r\n        })\r\n    }\r\n\r\n    //function to make patient sick, used in forms in NewIllness\r\n    makePatientSick(appointments){\r\n        alert(\"Patient marked ill. Appointments removed.\")\r\n        this.setState ({\r\n            appointments\r\n        })\r\n    }\r\n\r\n    //function to add dentist, used in newEmployee\r\n    addDentist (event) {\r\n        event.preventDefault();\r\n        const type = event.target.type.value;\r\n        const checkboxes = Array.from(document.getElementsByClassName('skill-checkbox'));\r\n        const skills = checkboxes.map(checkbox => {if (checkbox.checked){return checkbox.value} else {return null}\r\n        })\r\n\r\n        //compile the person\r\n        const newPerson = {\r\n            id: this.state[event.target.type.value].slice(-1)[0].id +1,\r\n            firstname: event.target.firstname.value,\r\n            surname: event.target.surname.value,\r\n            email: `${event.target.firstname.value}.${event.target.surname.value}@tandartspraktijkbvt.nl`,\r\n            skills: skills\r\n        }\r\n        const employees = this.state[event.target.type.value]\r\n        employees.push(newPerson)\r\n\r\n        //push the person to the corresponding array if the type is dentist\r\n        if (type === \"dentists\") {\r\n            this.setState ({\r\n                dentists: employees\r\n            })\r\n        }\r\n\r\n        //or if the type is assistant\r\n        else {\r\n            this.setState ({\r\n                assistants: employees\r\n            })\r\n        }\r\n        event.target.reset();\r\n        alert(\"Person added. Thank you.\")\r\n        }\r\n        \r\n        //function to add an appoint, used in NewAppointment\r\n        addAppointment(newAppointment){\r\n            const appointments = this.state.appointments\r\n            appointments.push(newAppointment)\r\n            this.setState({\r\n                appointments\r\n            })\r\n            alert('Appointment added, thank you.')\r\n        }\r\n\r\n        //function to remove an appointment, used in calendar\r\n        removeAppointment(appointment){   \r\n        const answer = window.confirm(\"Do you want to remove this appointment?\");\r\n            if (answer) {\r\n                const appointments = this.state.appointments.filter(app => {\r\n                    return app.id !== appointment\r\n                })\r\n                this.setState ({\r\n                    appointments\r\n                })\r\n            }\r\n        }\r\n\r\n        //function to edit an appointment, used in calendar\r\n        editAppointment (appId) {\r\n            //ask user for a day, and store available times in \"times\"\r\n            const selectedDay = parseInt(prompt(\"Enter a new day (1 - 28)\"));\r\n            const selectedApp = this.state.appointments.find(app => app.id === appId);\r\n            const appsOnDay = this.state.appointments\r\n                .filter(app => app.day === selectedDay)\r\n            let times = Array.from({length:11},(v,k)=>k+8)\r\n            let blockedTimes = []\r\n            appsOnDay.forEach(app => {\r\n                if(app.dentist.id === selectedApp.dentist.id || app.assistant.id === selectedApp.assistant.id){\r\n                    times = times.filter(time => time !== app.time)\r\n                }\r\n            })\r\n\r\n            //ask user for a time, and send it to appointments\r\n            const selectedTime = parseInt(prompt(`Pick an available time (${times})`))\r\n            if(times.includes(selectedTime)){\r\n                selectedApp.time = selectedTime;\r\n                selectedApp.day = selectedDay;\r\n                const appointments = this.state.appointments.filter(app => app.id !== appId)\r\n                appointments.push(selectedApp);\r\n                this.setState({\r\n                    appointments\r\n                })\r\n            }\r\n            else{\r\n                alert('Invalid time. Move aborted. Please try again.')\r\n            }\r\n        }\r\n    render() {\r\n        return(\r\n        <Router>\r\n            <div>\r\n            <nav>\r\n                <ul>\r\n                <li>\r\n                    <Link to=\"/\">Home</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/calendar\">Calendar view</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/day\">Day view</Link>\r\n                </li>\r\n                </ul>\r\n            </nav>\r\n            <main>\r\n                <Switch>\r\n                <Route path=\"/calendar\">\r\n                    <Calendar \r\n                    appointments={this.state.appointments} \r\n                    removeAppointment={this.removeAppointment}\r\n                    editAppointment={this.editAppointment}\r\n                    />\r\n                </Route>\r\n                <Route path=\"/day\">\r\n                    <Day appointments={this.state.appointments.filter(app => app.day === 1)} />\r\n                </Route>\r\n                <Route path=\"/\">\r\n                    <Home \r\n                    data={this.state} \r\n                    makeDentistSick={this.makeDentistSick} \r\n                    makePatientSick={this.makePatientSick}\r\n                    addDentist={this.addDentist}\r\n                    addAppointment={this.addAppointment}\r\n                    newPatient={this.newPatient}\r\n                    />\r\n                </Route>\r\n                </Switch>\r\n            </main>\r\n            </div>\r\n        </Router>\r\n        );\r\n    }\r\n}\r\nexport default App;","C:\\Users\\Gebruiker\\Documents\\GitHub\\WINCacademy\\dentist_react\\src\\database.js",[],[],"C:\\Users\\Gebruiker\\Documents\\GitHub\\WINCacademy\\dentist_react\\src\\functions\\generateRandomAppointments.js",[],[],"C:\\Users\\Gebruiker\\Documents\\GitHub\\WINCacademy\\dentist_react\\src\\components\\Home.js",[],[],"C:\\Users\\Gebruiker\\Documents\\GitHub\\WINCacademy\\dentist_react\\src\\components\\Calendar.js",["98"],[],"import React from \"react\";\r\nimport \"../styles/Calendar.css\";\r\nimport DayInMonth from \"./DayInMonth\";\r\n\r\nconst divideByDay = appointments => {\r\n    const appointmentsByDay = {};\r\n    appointments.forEach(appointment => {\r\n        const day = appointment.day;\r\n        if (!appointmentsByDay.hasOwnProperty(day)) {\r\n        appointmentsByDay[day] = [];\r\n        }\r\n        appointmentsByDay[day].push(appointment);\r\n    });\r\n    return appointmentsByDay;\r\n    };\r\n\r\nexport default ({ appointments, removeAppointment, editAppointment }) => {\r\n    const appointmentsByDay = divideByDay(appointments);\r\n    const daysInMonthJSX = \r\n        Object\r\n        .values(appointmentsByDay)\r\n        .map((appointmentsInDay, index) => (\r\n        <DayInMonth \r\n            appointments={appointmentsInDay} \r\n            key={index} \r\n            removeAppointment={removeAppointment}\r\n            editAppointment={editAppointment}\r\n        />\r\n    ));\r\n\r\n    return (\r\n        <div className=\"calendarview\">\r\n        <div className=\"header\">\r\n            <div>Maandag</div>\r\n            <div>Dinsdag</div>\r\n            <div>Woensdag</div>\r\n            <div>Donderdag</div>\r\n            <div>Vrijdag</div>\r\n        </div>\r\n        <div className=\"table\">{daysInMonthJSX}</div>\r\n        </div>\r\n\r\n    );\r\n};","C:\\Users\\Gebruiker\\Documents\\GitHub\\WINCacademy\\dentist_react\\src\\components\\Day.js",["99"],[],"import React from \"react\";\r\nimport \"../styles/Day.css\";\r\nimport AppointmentInDay from \"./AppointmentInDay\";\r\n\r\nexport default ({ appointments }) => {\r\n    appointments.sort(function(a, b) {\r\n        return a.time - b.time;\r\n    });\r\n    const appointmentsJSX = appointments.map(\r\n        ({ time, patient, dentist, assistant, type }, index) => (\r\n            <AppointmentInDay\r\n                time={time}\r\n                patient={patient}\r\n                dentist={dentist}\r\n                assistant={assistant}\r\n                type={type}\r\n                key={index}\r\n            />\r\n        )\r\n    );\r\n    return <ul className=\"dayview\">{appointmentsJSX}</ul>;\r\n};","C:\\Users\\Gebruiker\\Documents\\GitHub\\WINCacademy\\dentist_react\\src\\components\\DayInMonth.js",["100"],[],"import React from \"react\";\r\nimport AppointmentInMonth from \"./AppointmentInMonth\";\r\n\r\nexport default ({ appointments, removeAppointment, editAppointment}) => {\r\n    appointments.sort((a, b) => {\r\n        return a.time - b.time;\r\n    });\r\n\r\n    const appointmentsJSX = appointments.map(({ time, patient, dentist, assistant, id }, index) => (\r\n        <AppointmentInMonth \r\n        time={time} \r\n        patient={patient} \r\n        dentist={dentist} \r\n        assistant={assistant} \r\n        key={index} \r\n        removeAppointment={removeAppointment} \r\n        id={id}\r\n        editAppointment={editAppointment}\r\n        />\r\n    ));\r\n    return ( \r\n        <div className=\"day\">\r\n            {appointmentsJSX}\r\n        </div>\r\n    )\r\n};","C:\\Users\\Gebruiker\\Documents\\GitHub\\WINCacademy\\dentist_react\\src\\components\\AppointmentInDay.js",[],[],"C:\\Users\\Gebruiker\\Documents\\GitHub\\WINCacademy\\dentist_react\\src\\components\\forms\\NewIllness.js",[],[],"C:\\Users\\Gebruiker\\Documents\\GitHub\\WINCacademy\\dentist_react\\src\\components\\forms\\NewPatient.js",[],[],"C:\\Users\\Gebruiker\\Documents\\GitHub\\WINCacademy\\dentist_react\\src\\components\\forms\\NewEmployee.js",[],[],"C:\\Users\\Gebruiker\\Documents\\GitHub\\WINCacademy\\dentist_react\\src\\components\\forms\\NewAppointment.js",[],[],"C:\\Users\\Gebruiker\\Documents\\GitHub\\WINCacademy\\dentist_react\\src\\components\\AppointmentInMonth.js",["101"],[],"import React from \"react\";\r\n\r\nconst format_time = time => (time < 10 ? `0${time}:00u` : `${time}:00u`);\r\n\r\nexport default ({ time, patient, dentist, removeAppointment, editAppointment, id }) => {\r\n    if (dentist.isIll){\r\n        return (\r\n        <div className=\"appointment ill\">\r\n            <span className=\"time\">{format_time(time)}</span>\r\n            <span className=\"patient\">{`${patient.firstname} ${patient.surname}`}</span>\r\n            <span role=\"img\" aria-label=\"icon\" className=\"icon\" onClick={() => {removeAppointment(id)}}>🚫</span>\r\n            <span role=\"img\" aria-label=\"icon\" className=\"icon\" onClick={() => {editAppointment(id)}}><span role=\"img\"aria-label=\"icon\">🕑</span></span>\r\n        </div>\r\n        )\r\n    }else {\r\n        return(\r\n        <div className=\"appointment\">\r\n            <span className=\"time\">{format_time(time)}</span>\r\n            <span className=\"patient\">{`${patient.firstname} ${patient.surname}`}</span>\r\n            <span role=\"img\" aria-label=\"icon\" className=\"icon\" onClick={() => {removeAppointment(id)}}>🚫</span>\r\n            <span role=\"img\" aria-label=\"icon\" className=\"icon\" onClick={() => {editAppointment(id)}}><span role=\"img\"aria-label=\"icon\">🕑</span></span>\r\n        </div>\r\n        )\r\n    }\r\n}","C:\\Users\\Gebruiker\\Documents\\GitHub\\WINCacademy\\dentist_react\\src\\components\\forms\\NewAppointmentPerson.js",[],[],"C:\\Users\\Gebruiker\\Documents\\GitHub\\WINCacademy\\dentist_react\\src\\components\\forms\\NewIllnessOption.js",[],[],"C:\\Users\\Gebruiker\\Documents\\GitHub\\WINCacademy\\dentist_react\\src\\components\\forms\\NewAppointmentTime.js",[],[],{"ruleId":"102","severity":1,"message":"103","line":123,"column":17,"nodeType":"104","messageId":"105","endLine":123,"endColumn":29},{"ruleId":"106","severity":1,"message":"107","line":17,"column":1,"nodeType":"108","endLine":44,"endColumn":3},{"ruleId":"106","severity":1,"message":"107","line":5,"column":1,"nodeType":"108","endLine":22,"endColumn":3},{"ruleId":"106","severity":1,"message":"107","line":4,"column":1,"nodeType":"108","endLine":26,"endColumn":3},{"ruleId":"106","severity":1,"message":"107","line":5,"column":1,"nodeType":"108","endLine":25,"endColumn":2},"no-unused-vars","'blockedTimes' is assigned a value but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration"]